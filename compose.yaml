services:
  ewm-service:
    build: client
    image: explore-client
    container_name: explore-client
    ports:
      - "8080:8080"
    depends_on:
      - stats-server
      - mainserver
    environment:
      - EXPLORE_SERVER_URL=http://server:9090
      - MAIN_SERVER_URL=http://mainserver:8085

  stats-server:
    build: server
    image: explore-server
    container_name: explore-server
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/explore
      - SPRING_DATASOURCE_USERNAME=explore
      - SPRING_DATASOURCE_PASSWORD=explore

  mainserver:
    build: mainserver
    image: main-server
    container_name: main-server
    ports:
      - "8085:8085"
    depends_on:
      - maindb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5437/main
      - SPRING_DATASOURCE_USERNAME=main
      - SPRING_DATASOURCE_PASSWORD=main

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=explore
      - POSTGRES_USER=explore
      - POSTGRES_DB=explore
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://explore:explore@db:5432/explore -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS stats (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          uri VARCHAR(255) NOT NULL,
          app VARCHAR(255) NOT NULL,
          ip VARCHAR(100) NOT NULL,
          timestamp timestamp NOT NULL,
          hits BIGINT NOT NULL,
          unique_hits BIGINT NOT NULL
        );
        EOSQL

  maindb:
    image: postgres:16.1
    container_name: mainpostgres
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=main
      - POSTGRES_PASSWORD=main
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  maindb-init:
    image: postgres:16.1
    container_name: maindb-init
    depends_on:
      maindb:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://main:main@maindb:5437/main -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS categories (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          name VARCHAR(255) NOT NULL UNIQUE
        );

        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          email VARCHAR(255) NOT NULL UNIQUE,
          name VARCHAR(255) NOT NULL
        );

        CREATE TABLE IF NOT EXISTS locations (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          lat REAL NOT NULL,
          lon REAL
        );

        CREATE TABLE IF NOT EXISTS events (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          annotation VARCHAR(3000),
          category_id BIGINT,
          event_date timestamp,
          initiator_id BIGINT,
          paid BOOLEAN NOT NULL,
          title VARCHAR(3000),
          confirmed_requests BIGINT,
          views BIGINT,
          description VARCHAR(7000),
          location_id BIGINT,
          participant_limit SMALLINT,
          request_moderation BOOLEAN NOT NULL,
          created_On timestamp,
          published_On timestamp,
          state VARCHAR(3000),
          FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE,
          FOREIGN KEY (initiator_id) REFERENCES users(id) ON DELETE CASCADE,
          FOREIGN KEY (location_id) REFERENCES locations(id) ON DELETE CASCADE
        );

        CREATE TABLE IF NOT EXISTS compilations (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          title VARCHAR(255) NOT NULL,
          pinned BOOLEAN NOT NULL
        );

        CREATE TABLE IF NOT EXISTS compilationevents (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          compilation_id NOT NULL,
          event_id BIGINT NOT NULL,
          FOREIGN KEY (compilation_id) REFERENCES compilations(id) ON DELETE CASCADE,
          FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE
        );

        CREATE TABLE IF NOT EXISTS requests (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_date timestamp NOT NULL,
          event_id BIGINT NOT NULL,
          requester_id BIGINT NOT NULL,
          status VARCHAR(100) NOT NULL,
          FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
          FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE
        );
        EOSQL